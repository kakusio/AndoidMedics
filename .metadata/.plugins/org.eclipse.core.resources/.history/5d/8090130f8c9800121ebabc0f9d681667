package com.example.nfcandroid;

import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.PendingIntent;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.IntentFilter.MalformedMimeTypeException;
import android.nfc.NdefMessage;
import android.nfc.NdefRecord;
import android.nfc.NfcAdapter;
import android.os.Bundle;
import android.os.Parcelable;
import android.util.Log;
import android.view.Menu;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;
import android.widget.Toast;

import com.example.nfcandroid.Activities.AddExamen;
import com.example.nfcandroid.Activities.AddPariente;
import com.example.nfcandroid.Activities.EditProfile;
import com.example.nfcandroid.Activities.RemoveMedic;
import com.example.nfcandroid.Utility.ShowMesage;

public class MedicsClientes extends Activity {
	private static final String TAG = "stickynotes";
	private static Toast toastPeticionExitosa;
	public MedicsClientesData data = new MedicsClientesData(true, "c06c7e2f-1805-4257-a0dc-c8e4f175ae71", new Persona());

	@Override
	public void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		setContentView(R.layout.activity_proyect);
		data.status = (TextView) findViewById(R.id.status);
		data.PacienteName = (TextView) findViewById(R.id.pacienteName);
		toastPeticionExitosa =  Toast.makeText(this, "Petición Exitosa", Toast.LENGTH_SHORT);
		InicializarBotonesPrincipales();

		data.mNfcAdapter = NfcAdapter.getDefaultAdapter(this);
		data.mNfcPendingIntent = PendingIntent.getActivity(this, 0, new Intent(this, getClass()).addFlags(Intent.FLAG_ACTIVITY_SINGLE_TOP), 0);

		IntentFilter ndefDetected = new IntentFilter( NfcAdapter.ACTION_NDEF_DISCOVERED);
		try {
			ndefDetected.addDataType("text/plain");
		} catch (MalformedMimeTypeException e) {
		}
		data.mNdefExchangeFilters = new IntentFilter[] { ndefDetected };
		
		//TODO: comentar
		new ShowMesage(this, StaticData.IpAdd,data.user.idPersona, data.user.idPersona, data.user)
		.Loging( data.status, this );
		data.user.idPersona = data.user.idPersona;
	}
	
	

	@Override
	public boolean onCreateOptionsMenu(Menu menu) {
		getMenuInflater().inflate(R.menu.activity_proyect, menu);
		return true;
	}

	@Override
	protected void onResume() {
		super.onResume();
		// Sticky notes received from Android
		if (NfcAdapter.ACTION_NDEF_DISCOVERED.equals(getIntent().getAction())) {
			NdefMessage[] messages = getNdefMessages(getIntent());
			byte[] payload = messages[0].getRecords()[0].getPayload();
			data.status.setText(new String(payload));
			setIntent(new Intent()); // Consume this intent.
		}
		enableNdefExchangeMode();
	}

	@SuppressWarnings("deprecation")
	@Override
	protected void onPause() {
		super.onPause();
		data.mNfcAdapter.disableForegroundNdefPush(this);
	}

	@Override
	protected void onNewIntent(Intent intent) {
		// NDEF exchange mode
		if ( NfcAdapter.ACTION_NDEF_DISCOVERED.equals(intent.getAction())) {
			NdefMessage[] msgs = getNdefMessages(intent);
			promptForContent(msgs[0]);
		}
	}

	private void promptForContent(final NdefMessage msg) {
		data.user.idPersona = new String(msg.getRecords()[0].getPayload());
		if (data.user.idPersona != "" && !data.user.idPersona.equals(data.user.idPersona)){
			new ShowMesage(this ,StaticData.IpAdd ,data.user.idPersona, data.user.idPersona)
				.AddPariente(toastPeticionExitosa);
		} else{			
			new ShowMesage(this, StaticData.IpAdd,data.user.idPersona, data.user.idPersona)
				.Loging( data.status);
			data.user.idPersona = data.user.idPersona;
		}
	}

	private NdefMessage getNoteAsNdef() {
		byte[] textBytes = data.user.idPersona.getBytes();
		NdefRecord textRecord = new NdefRecord(NdefRecord.TNF_MIME_MEDIA, "text/plain".getBytes(), new byte[] {}, textBytes);
		return new NdefMessage(new NdefRecord[] { textRecord });
	}

	NdefMessage[] getNdefMessages(Intent intent) {
		// Parse the intent
		NdefMessage[] msgs = null;
		String action = intent.getAction();
		if (NfcAdapter.ACTION_TAG_DISCOVERED.equals(action)	|| NfcAdapter.ACTION_NDEF_DISCOVERED.equals(action)) {
			Parcelable[] rawMsgs = intent.getParcelableArrayExtra(NfcAdapter.EXTRA_NDEF_MESSAGES);
			if (rawMsgs != null) {
				msgs = new NdefMessage[rawMsgs.length];
				for (int i = 0; i < rawMsgs.length; i++) {
					msgs[i] = (NdefMessage) rawMsgs[i];
				}
			} else {
				// Unknown tag type
				byte[] empty = new byte[] {};
				NdefRecord record = new NdefRecord(NdefRecord.TNF_UNKNOWN, empty, empty, empty);
				NdefMessage msg = new NdefMessage(new NdefRecord[] { record });
				msgs = new NdefMessage[] { msg };
			}
		} else {
			Log.d(TAG, "Unknown intent.");
			finish();
		}
		return msgs;
	}

	@SuppressWarnings("deprecation")
	private void enableNdefExchangeMode() {
		data.mNfcAdapter.enableForegroundNdefPush(this, getNoteAsNdef());
		data.mNfcAdapter.enableForegroundDispatch(this, data.mNfcPendingIntent, data.mNdefExchangeFilters, null);
	}
	

	public void InicializarBotonesPrincipales() {
		((TextView) findViewById(R.id.status)).setText(data.status.getText());
		((TextView) findViewById(R.id.pacienteName)).setText(data.PacienteName.getText());
		
		data.agregarPariente = (Button) findViewById(R.id.buttonAgregarPariente);
		data.agregarExamen = (Button) findViewById(R.id.buttonAgregarExamen);
		data.editarPerfil = (Button) findViewById(R.id.buttonEditarPerfil);
		data.desligarMedico = (Button) findViewById(R.id.buttonDeligarMedico);
		
		data.agregarPariente.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(getApplicationContext(), AddPariente.class);
				startActivity(intent);
			}
		});
		data.agregarExamen.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(getApplicationContext(), AddExamen.class);
				intent.putExtra("idPersona", data.user.idPersona);
				startActivity(intent);
			}
		});		
		data.editarPerfil.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(getApplicationContext(), EditProfile.class);
				intent.putExtra("Email", data.user.Email);
				intent.putExtra("TelefonoResidencial", data.user.TelefonoResidencial);
				intent.putExtra("TelefonoCelular", data.user.TelefonoCelular);
				intent.putExtra("Direccion", data.user.Direccion);
				intent.putExtra("idPersona", data.user.idPersona);
				startActivity(intent);
			}
		});
		data.desligarMedico.setOnClickListener(new View.OnClickListener() {
			public void onClick(View v) {
				Intent intent = new Intent(getApplicationContext(), RemoveMedic.class);
				startActivity(intent);
			}
		});
	}
	
	public void SetVisibleMain(String results) {	
			if (results != null) {
				JSONObject json;
				try {
					json = new JSONObject(results);
					data.user.ParseFromJson(json);
					data.agregarPariente.setVisibility(View.VISIBLE);
					data.agregarExamen.setVisibility(View.VISIBLE);
					data.editarPerfil.setVisibility(View.VISIBLE);
					data.desligarMedico.setVisibility(View.VISIBLE);
					data.PacienteName.setText("Bienvenido " + data.user.Nombres);
				} catch (JSONException e) {
					data.PacienteName.setText("Bienvenido " + results);
				}
			}
	}
}
