package com.example.nearshorenexus.Tools;

import java.io.BufferedInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.URL;
import java.net.URLConnection;

import android.app.ProgressDialog;
import android.os.AsyncTask;
import android.os.Environment;

import com.example.nearshorenexus.Resources.ResourcesDetailsActivity;

public class DownloadFile extends AsyncTask<String, Integer, String> {
	ProgressDialog mProgressDialog;
	ResourcesDetailsActivity activity;
    public DownloadFile(ProgressDialog mProgressDialog, ResourcesDetailsActivity activity) {
        this.mProgressDialog = mProgressDialog;
        this.activity = activity;
	}

	protected void onPreExecute() {
        super.onPreExecute();
        this.mProgressDialog.show();
    }
    
	
    @Override
    protected String doInBackground(String... sUrl) {
    	String filePath = Environment.getExternalStorageDirectory().getPath() + "/";
        try {        	
            URL url = new URL(sUrl[0]);
            URLConnection connection = url.openConnection();            
        	String[] arr = url.toString().split("/");
        	 filePath += arr[arr.length-1];
        	
            connection.connect();
            int fileLength = connection.getContentLength();
            InputStream input = new BufferedInputStream(url.openStream());
            OutputStream output = new FileOutputStream(filePath);

            byte data[] = new byte[1024];
            long total = 0;
            int count;
            while ((count = input.read(data)) != -1) {
                total += count;
                // publishing the progress....
                publishProgress((int) (total * 100 / fileLength));
                output.write(data, 0, count);
            }

            output.flush();
            output.close();
            input.close();
        } catch (Exception e) {
        	e.printStackTrace();
        }
        return filePath;
    }

    @Override
    protected void onProgressUpdate(Integer... progress) {
        super.onProgressUpdate(progress);
        mProgressDialog.setProgress(progress[0]);
    }

    @Override
    protected void onPostExecute(String result) {       	
        this.mProgressDialog.dismiss();
        this.activity.openfile(result);        
    }
}

